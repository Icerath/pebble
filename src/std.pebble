fn printstr(str: str) { unreachable }
fn len<T>(arr: &[T]) -> int { unreachable }
fn push<T>(arr: &[T], value: T) { unreachable }
fn pop<T>(arr: &[T]) -> T { unreachable }

// TODO: support str::len instead
impl str {
    fn len(self: str) -> int { unreachable }
    fn find(self: str, needle: str) -> int { unreachable }
    fn rfind(self: str, needle: str) -> int { unreachable }
}

impl int {
    fn chr(self: int) -> char { unreachable }
}

impl char {
    fn ord(self: char) -> int { unreachable }
}

fn print<T>(val: T) {
    printstr("${val}")
}

fn println<T>(val: T) {
    printstr("${val}\n")
}